import React, { useState, useEffect } from 'react';
import './AddProduct.css';
import { MdAddPhotoAlternate } from "react-icons/md";
import { FaTrashAlt } from "react-icons/fa";
import { useNavigate, useLocation } from 'react-router-dom';

const AddProduct = () => {
  const navigate = useNavigate();
  const location = useLocation();
  const editProduct = location.state?.product || null;

  const [name, setName] = useState('');
  const [price, setPrice] = useState('');
  const [volume, setVolume] = useState('');
  const [category, setCategory] = useState('');
  const [description, setDescription] = useState('');
  const [imagePreview, setImagePreview] = useState(null);
  const [imageFile, setImageFile] = useState(null); // ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÉ‡∏ô‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï

  // ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏´‡∏≤‡∏Å‡πÄ‡∏õ‡πá‡∏ô‡πÇ‡∏´‡∏°‡∏î‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
  useEffect(() => {
    if (editProduct) {
      setName(editProduct.name || '');
      setPrice(editProduct.price || '');
      setVolume(editProduct.volume || '');
      setCategory(editProduct.category || '');
      setDescription(editProduct.description || '');
      setImagePreview(editProduct.image || null); // ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏π‡∏õ preview ‡πÄ‡∏î‡∏¥‡∏°
    }
  }, [editProduct]);

  const handleImageChange = (e) => {
    const file = e.target.files[0];
    if (file) {
      setImagePreview(URL.createObjectURL(file));
      setImageFile(file); // ‡πÄ‡∏Å‡πá‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏à‡∏£‡∏¥‡∏á‡πÑ‡∏ß‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î
    }
  };

  const handleRemoveImage = () => {
    setImagePreview(null);
    setImageFile(null);
    document.getElementById('fileInput').value = null;
  };

  const handleSubmit = () => {
    if (!name || !price || !volume || !category || (!imagePreview && !imageFile)) {
      alert("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô");
      return;
    }

    const productData = {
      name,
      price,
      volume,
      category,
      description,
      image: imagePreview, // ‡πÉ‡∏ä‡πâ imagePreview ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ (‡πÉ‡∏ô‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï‡πÉ‡∏´‡πâ‡πÅ‡∏ó‡∏ô‡∏î‡πâ‡∏ß‡∏¢ URL ‡∏à‡∏≤‡∏Å Storage)
    };

    if (editProduct) {
      console.log('üì¶ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤:', productData);
      // TODO: ‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÑ‡∏õ backend ‡∏´‡∏£‡∏∑‡∏≠ Firestore ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï
    } else {
      console.log('üì• ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà:', productData);
      // TODO: ‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÑ‡∏õ backend ‡∏´‡∏£‡∏∑‡∏≠ Firestore ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏û‡∏¥‡πà‡∏°
    }

    navigate('/productStock');
  };

  return (
    <div className="add-product-container">
      <div className="header-bar">
        <h2>{editProduct ? '‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤' : '‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤'}</h2>
        <button className="to-stock-button" onClick={() => navigate('/productStock')}>
          ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏Ñ‡∏•‡∏±‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
        </button>
      </div>

      <label>‡∏ä‡∏∑‡πà‡∏≠</label>
      <input
        type="text"
        placeholder="‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤"
        value={name}
        onChange={(e) => setName(e.target.value)}
      />

      <label>‡∏£‡∏π‡∏õ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤</label>
      <div className="image-upload" onClick={() => !imagePreview && document.getElementById('fileInput').click()}>
        {imagePreview ? (
          <div className="image-preview-wrapper">
            <img src={imagePreview} alt="preview" className="preview-image" />
            <button className="remove-image-button" onClick={handleRemoveImage} type="button">
              <FaTrashAlt />
            </button>
          </div>
        ) : (
          <MdAddPhotoAlternate size={60} color="#666" />
        )}
      </div>
      <input
        type="file"
        id="fileInput"
        accept="image/*"
        style={{ display: 'none' }}
        onChange={handleImageChange}
      />

      <label>‡∏£‡∏≤‡∏Ñ‡∏≤‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤</label>
      <input
        type="number"
        placeholder="‡∏£‡∏≤‡∏Ñ‡∏≤‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤"
        value={price}
        onChange={(e) => setPrice(e.target.value)}
      />

      <label>‡∏õ‡∏£‡∏¥‡∏°‡∏≤‡∏ì</label>
      <input
        type="text"
        placeholder="‡πÄ‡∏ä‡πà‡∏ô 1 ‡∏•‡∏¥‡∏ï‡∏£, 500 ‡∏Å‡∏£‡∏±‡∏°"
        value={volume}
        onChange={(e) => setVolume(e.target.value)}
      />

      <label>‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà</label>
      <select value={category} onChange={(e) => setCategory(e.target.value)}>
        <option value="">‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤</option>
        <option value="food">‡∏ú‡∏•‡∏¥‡∏ï‡∏†‡∏±‡∏ì‡∏ë‡πå‡∏≠‡∏≤‡∏´‡∏≤‡∏£</option>
        <option value="drink">‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏î‡∏∑‡πà‡∏°</option>
        <option value="household">‡∏Ç‡∏≠‡∏á‡πÉ‡∏ä‡πâ‡πÉ‡∏ô‡∏Ñ‡∏£‡∏±‡∏ß‡πÄ‡∏£‡∏∑‡∏≠‡∏ô</option>
        <option value="medicine">‡∏¢‡∏≤‡∏™‡∏≤‡∏°‡∏±‡∏ç</option>
      </select>

      <label>‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°‡∏Ç‡∏≠‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤</label>
      <textarea
        placeholder="‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡∏•‡∏±‡∏Å‡∏©‡∏ì‡∏∞/‡∏à‡∏∏‡∏î‡πÄ‡∏î‡πà‡∏ô‡∏Ç‡∏≠‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤..."
        value={description}
        onChange={(e) => setDescription(e.target.value)}
      />

      <button className="save-button" onClick={handleSubmit}>
        {editProduct ? '‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç' : '‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤'}
      </button>
    </div>
  );
};

export default AddProduct;
